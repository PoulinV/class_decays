root = output/dcdm_example_
write warnings = yes
write background = yes

-->To choose the output we want: Cl^TT, P(k), etc

output = tCl, pCl, lCl, mPk

-->To select lensing and the maximum ell to be computed

lensing = yes
l_max_scalars = 2600

-->To ask the code to compute P(k,z) at several redshifts z 

z_pk = 0,3

--> maximum k at which P(k,z) is computed

P_k_max_h/Mpc = 1.0

--> maximum z at which P(k,z) is computed

z_max_pk = 4.0

-->To get evolution of perturbations at several k

k_output_values =  0.001, 0.01, 0.1, 1

---> LCDM parameters

n_s = 0.9673
ln10^{10}A_s = 3.052
tau_reio =  0.0582
omega_b = 0.0224
H0 = 67.70

--->To activate the 2-body decay to DR and WDM, one should give a value to Omega_ini_dcdm2 (or omega_ini_dcdm2).
We use this variable name to differentiate from omega_ini_dcdm, which is reserved for 1-body decays to just DR.
Note that if you are assuming all dark matter to decay, then you should also set omega_cdm to a tiny value (but not zero),
since our eqs are coded in the synchronous gauge, defined with respect to the CDM   

omega_cdm = 0.00001
omega_ini_dcdm2= 0.1194

---> specific parameters describing the decay, can be given both in linear and in log scale
We notice that Gamma_dcdm is assumed to be given in the same units as H0, that is, km/s/Mpc
epsilon is always bounded between 0 and 1/2

Log10_Gamma_dcdm = 1.25
log10_epsilon_dcdm = -2.1624

# Gamma_dcdm =17.78
# epsilon_dcdm =0.0069

----> The model doesn't directly depend on the mass of the daughter particles, but rather on the ratio of masses 
of the daughter and mother particles, through the epsilon parameter. The mass of the mother DM is irrelevant, since 
it's assumed to be cold, so we choose to normalize it to 1. This means you should set M_dcdm to 1

M_dcdm = 1

---> Both the WDM daughter and neutrinos are treated as NCDM species in CLASS. The type of NCDM species is specified 
through background_ncdm_distribution (0 corresponds to neutrinos, 1 corresponds to WDM daughter)
Below we select two NCDM species: the WDM daughter and a massive neutrino with mass of 0.06 eV. 
Note that the variable m_ncdm is reserved for the mass of neutrinos (in eV), but it is never used for the WDM daughter
However, if we select N_ncdm bigger than 1, m_ncdm has to be passed as a list of values. We arbitrarily 
set m_ncdm to 0 for the WDM daughter (just a placeholder)

N_ncdm = 2
background_ncdm_distribution = 0, 1
m_ncdm = 0.06, 0
N_ur = 2.0328

---> for each NCDM species, we have to select a quadrature strategy (0 corresponds to automatic quadrature, while 1 corresponds
to log simpson method). We also give the number of momentum bins used in perturbations (we found that 300 bins gives decent results
at super-horizon scales for the WDM daughter

Quadrature strategy = 0,4
Number of momentum bins perturbs = 50, 300

---> One should also set evolver to 0, otherwise the code crashes. This corresponds to using the rkck evolver, instead of
the default ndf15 evolver of CLASS. This issue should be improved in the future

evolver = 0

---> maximum number of multipoles considered in the boltzmann hierarchy of the NCDM species

l_max_ncdm = 17

---> By setting ncdm_fluid_approximation to 2, we switch-on the fluid approximation for the NCDM species, including the 
WDM daughter. This approximation is activated for sub-Hubble scales k*tau>>1, the variable ncdm_fluid_trigger_tau_over_tau_k 
gives the value of k*tau at which we want to activate the fluid equations
If you want to change the full hierarchy calculation, then you should set ncdm_fluid_approximation to 3, comment the line with
ncdm_fluid_trigger_tau_over_tau_k, and increase the Number of momentum bins perturbs from 300 to some higher value (at least 1000).

ncdm_fluid_approximation = 2
ncdm_fluid_trigger_tau_over_tau_k = 25

---> to activate/desactivate perturbations of the daughter particles

massive_daughter_perturbations = yes
dark_radiation_perturbations = yes

input_verbose = 1
background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
transfer_verbose = 1
primordial_verbose = 1
spectra_verbose = 1
nonlinear_verbose = 1
lensing_verbose = 1
output_verbose = 1
